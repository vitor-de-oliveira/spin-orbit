- calculate p.o stability and put it in the data file name

- track bifurcations of the p.o.s on k and e

- Maybe use Monte-Carlos for time series of high velocity i.c.s

- Fix backward integration on phase space. See how it is written in
the look for resonance function. See if this problem
appears in other places.

- improve look for resonance function in spin orbit.
It does not work very well. Maybe put it on tests

- remove reference to K from everything that concerns the
rigid case. Maybe add a type to the field to differentiate it between
conservative and dissipative and use it to improve the data file names
and figure labels

- acertar quando o periodo da po é na verdade menor
do que o dado. Por exemplo, o metodo acha ponto fixo
quando procura po de periodo 2. Diferenciar. Não sei como.

- add a criterium for the basin which measures if the orbit stays close 
to the attractor for a sufficient ammount of time. 100 cycles maybe. 
Put this criterium along with the convergence criterium to stabilish that a
given orbit has ideed converged.

- write a python lib to analyse the histogram of convergence times, in
order to find tendences and to see if the sim time is big enough

- maybe change argument of basin of attraction function to
a member of periodic orbit structure. Also do this to evolve_basin.
Or maybe just calculate the p.o and sent it to the function

- Organize tests

- move time series to tests. Or rather, transform time series
to a drawing of orbits only

- talvez fazer uma pasta de figuras / exemplos e subir no github

- Make an init for the parameters of Hyperion and so on

- Use terminal eps in scripts and pipes (or both versions on pipe and script)

- think of a good way to store the results. maybe dropbox or drive.
or maybe move it all to the IF computer using anydesk

- think of a good way to organize the data. config file
along with another dir with figures and raw data.
Perhaps, due to the existence of a config file, just
put the date on the file name.
Maybe write a print_config_file function which would
be called along with the gnuplot pipe. Include execution time
somehow. Tomaz gave a few tips on binaries formats but I found
that to be too difficult

- pesquisar e adicionar, se houver, a verificação no erro de 
alguma grandeza que envolva a parte rotacional do problema

- pegar os tempos reais no integrador? multiplicar pelo passo?

- maybe remove two-body system

- understand how the specific values to the moon (or any other)
satellite comes into play in the initial conditions. There are
also the masses. Alterar a funcao init_orbital em dynamical_systems
de acordo. Olhar Murray chap 2

- stabilish the right values for G and m. Como adimensionalizar
as massas, tendo em mente que existe a parte orbital e a parte
do spin e um usa a soma das massas e o outro a massa do primario
A eq do artigo do wisdom é diferente da do projeto. Pela 3a lei
de kepler, dá para mostrar que elas são idênticas, exceto pela 
presença da massa do secundário

- checar se o período deveria ser sempre 2pi e o eixo maior
a igual a 1.

- implement automan. No manifolds.h, colocar um check function 
para verificar se a orbita passada para o programa representa 
uma orbita periodica para uma certa tolerancia

- Talvez, mais para frente, deixar o ponteiro params mais
especifico para cada caso, associando quais valores entram
lah e em qual posicao com os campos vetoriais, ajustando
eles no init. Isso vai deixar o programa como um todo bem
mais generico

- maybe, in the future, use heap memory for everything